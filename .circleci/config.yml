#
# Copyright (C) 2018 to the original authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#         https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

orbs:
  kube-orb: circleci/kubernetes@0.11.0
version: 2.1
workflows:
  version: 2
  build:
    jobs:
      - build
jobs:
  test:
    parallelism: 5 # parallel containers to split the tests among
    machine: true
    environment:
      _JAVA_OPTIONS: "-Xms1024m -Xmx2048m"
      _SERVICE_OCCURENCE: 5
    steps:
      - checkout
      - run:
          name: Run regular tests
          command: |
            TESTS1=$(circleci tests glob "**/src/test/**/**.java" | grep -v 'spring-cloud-kubernetes-integration-tests')
            TESTS2=$(circleci tests glob "**/src/test/**.java" | grep -v 'spring-cloud-kubernetes-integration-tests')

            echo $TESTS1
            echo '######################################################'
            echo $TESTS1

#            CLASSNAMES=$(circleci tests glob "**/src/test/**/**.java" | grep -v 'spring-cloud-kubernetes-integration-tests' \
#                               | sed 's/.*src.test.java.//g'
#                               | sed 's@/@.@g' \
#                               | sed 's/.\{5\}$//' \
#                               | circleci tests split --split-by=timings --timings-type=classname)
#            echo $CLASSNAMES
#            TEST_ARG=$(echo $CLASSNAMES | sed 's/ /,/g')
#            echo $TEST_ARG
#            ./mvnw -s .settings.xml  -DfailIfNoTests=false -Dtest=$TEST_ARG -e test
#            mkdir -p $HOME/artifacts/junit/
#            find . -type f -regex ".*/spring-cloud-*.*/target/*.*" -exec cp {} $HOME/artifacts/ \;
#            find . -type f -regex ".*/target/.*-reports/.*" -exec cp {} $HOME/artifacts/junit/ \;
#            bash <(curl -s https://codecov.io/bash)
  build:
    machine: true
    environment:
      _JAVA_OPTIONS: "-Xms2g -Xmx2g"
      _SERVICE_OCCURENCE: 5
    steps:
      - checkout
      - restore_cache:
          keys:
            - spring-cloud-kubernetes-{{ .Branch }}-{{ checksum "pom.xml" }}
            - spring-cloud-kubernetes-{{ .Branch }}
            - spring-cloud-kubernetes
      - run:
          name: dependencies
          command: |
            ./mvnw -s .settings.xml -U --fail-never dependency:go-offline -Dservice.occurence=${_SERVICE_OCCURENCE} || true
      - run:
          name: build
          command: |
            ./mvnw -s .settings.xml clean install -Dservice.occurence=${_SERVICE_OCCURENCE} -DskipTests
      - save_cache:
          paths:
            - ~/.m2
          key: spring-cloud-kubernetes-{{ .Branch }}-{{ checksum "pom.xml" }}
notify:
  webhooks:
    - url: https://webhooks.gitter.im/e/22e6bb4eb945dd61ba54
